Software
engineers
'
information
behaviour
and
implicit
relevance
indicators
Software
engineering
is
a
cognitively
challenging
process
that
requires
continuous
access
to
multiple
sources
of
information
.
As
a
consequence
Software
Engineers
spend
a
significant
proportion
of
time
(
20-30
%
)
searching
for
information
and
engaging
in
opportunistic
programming
practices
,
reusing
the
existing
software
elements
.
In
this
paper
,
we
summarise
the
findings
,
discussing
how
software
developers
interact
with
information
and
information
retrieval
systems
.
Importantly
we
investigate
to
what
extent
a
domain-specific
search
and
recommendation
system
can
be
delivered
in
order
to
support
their
daily
activities
.
Based
on
two
user
studies
,
a
questionnaire
and
an
automated
observation
of
user
interactions
with
the
browser
,
we
identify
that
software
engineers
engage
in
a
finite
number
of
work-related
tasks
and
also
develop
a
finite
number
of
'
work
practices
'
/
'
archetypes
of
behaviour
'
.
Secondly
we
identify
a
group
of
domain-specific
behaviours
that
can
successfully
be
used
for
relevance
feedback
of
a
domain-specific
and
semi-collaborative
information
recommendation
system
that
can
support
software
engineers
in
performing
their
daily
work-related
tasks
more
effectively
.
